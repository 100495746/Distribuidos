/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CLAVES_RPC_H_RPCGEN
#define _CLAVES_RPC_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#include "claves.h"
#define MAX_STRING 256
#define MAX_ARRAY 32

typedef char Coord[8];

struct KeyArg {
	int key;
};
typedef struct KeyArg KeyArg;

struct SetArgs {
	int key;
	char *value1;
	int N_value2;
	struct {
		u_int V_value2_len;
		double *V_value2_val;
	} V_value2;
	Coord value3;
};
typedef struct SetArgs SetArgs;

struct ModifyArgs {
	int key;
	char *value1;
	int N_value2;
	struct {
		u_int V_value2_len;
		double *V_value2_val;
	} V_value2;
	Coord value3;
};
typedef struct ModifyArgs ModifyArgs;

struct GetReply {
	int status;
	char *value1;
	int N_value2;
	struct {
		u_int V_value2_len;
		double *V_value2_val;
	} V_value2;
	Coord value3;
};
typedef struct GetReply GetReply;

#define CLAVES_PROG 0x20000001
#define CLAVES_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DESTROY 0
extern  enum clnt_stat destroy_1(void *, int *, CLIENT *);
extern  bool_t destroy_1_svc(void *, int *, struct svc_req *);
#define SET_VALUE 1
extern  enum clnt_stat set_value_1(SetArgs *, int *, CLIENT *);
extern  bool_t set_value_1_svc(SetArgs *, int *, struct svc_req *);
#define GET_VALUE 2
extern  enum clnt_stat get_value_1(KeyArg *, GetReply *, CLIENT *);
extern  bool_t get_value_1_svc(KeyArg *, GetReply *, struct svc_req *);
#define DELETE_KEY 3
extern  enum clnt_stat delete_key_1(KeyArg *, int *, CLIENT *);
extern  bool_t delete_key_1_svc(KeyArg *, int *, struct svc_req *);
#define MODIFY_VALUE 4
extern  enum clnt_stat modify_value_1(ModifyArgs *, int *, CLIENT *);
extern  bool_t modify_value_1_svc(ModifyArgs *, int *, struct svc_req *);
#define EXIST 5
extern  enum clnt_stat exist_1(KeyArg *, int *, CLIENT *);
extern  bool_t exist_1_svc(KeyArg *, int *, struct svc_req *);
extern int claves_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DESTROY 0
extern  enum clnt_stat destroy_1();
extern  bool_t destroy_1_svc();
#define SET_VALUE 1
extern  enum clnt_stat set_value_1();
extern  bool_t set_value_1_svc();
#define GET_VALUE 2
extern  enum clnt_stat get_value_1();
extern  bool_t get_value_1_svc();
#define DELETE_KEY 3
extern  enum clnt_stat delete_key_1();
extern  bool_t delete_key_1_svc();
#define MODIFY_VALUE 4
extern  enum clnt_stat modify_value_1();
extern  bool_t modify_value_1_svc();
#define EXIST 5
extern  enum clnt_stat exist_1();
extern  bool_t exist_1_svc();
extern int claves_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Coord (XDR *, Coord);
extern  bool_t xdr_KeyArg (XDR *, KeyArg*);
extern  bool_t xdr_SetArgs (XDR *, SetArgs*);
extern  bool_t xdr_ModifyArgs (XDR *, ModifyArgs*);
extern  bool_t xdr_GetReply (XDR *, GetReply*);

#else /* K&R C */
extern bool_t xdr_Coord ();
extern bool_t xdr_KeyArg ();
extern bool_t xdr_SetArgs ();
extern bool_t xdr_ModifyArgs ();
extern bool_t xdr_GetReply ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CLAVES_RPC_H_RPCGEN */
